version: "3.4"

services:
  php:
    build:
      context: ./api_game/api
      target: api_platform_php
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER_GAME}:${POSTGRES_PASSWORD_GAME}@database:5432/${POSTGRES_DB_GAME}?serverVersion=${POSTGRES_VERSION}
    ports:
      - '9000:9000'
  pwa:
    build:
      context: ./api_game/pwa
      target: api_platform_pwa_prod
    environment:
      API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT: http://caddy
      NEXT_PUBLIC_ENTRYPOINT: http://caddy

  caddy:
    build:
      context: ./api_game/api/
      target: api_platform_caddy
    depends_on:
      - php
      - pwa
    environment:
      PWA_UPSTREAM: pwa:3000
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeMe!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  database:
    image: postgres:${POSTGRES_VERSION}-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-api}
      # You should definitely change the password in production
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_GAME}
      - POSTGRES_USER=${POSTGRES_USER_GAME}
    volumes:
      - db_data:/var/lib/postgresql/data:rw
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - '5432:5432'

  php_core:
    build:
      context: ./api_core/api
      target: api_platform_php
    depends_on:
      - database_core
    restart: unless-stopped
    volumes:
      - php_core_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    ports:
      - '9001:9000'
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER_CORE}:${POSTGRES_PASSWORD_CORE}@database_core:5432/${POSTGRES_DB_CORE}?serverVersion=${POSTGRES_VERSION}


  pwa_core:
    build:
      context: ./api_core/pwa
      target: api_platform_pwa_prod
    environment:
      API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT: http://caddy:81
      NEXT_PUBLIC_ENTRYPOINT: http://caddy:81

  caddy_core:
    build:
      context: ./api_core/api/
      target: api_platform_caddy
    depends_on:
      - php_core
      - pwa_core
    environment:
      PWA_UPSTREAM: pwa_core:3001
      SERVER_NAME: ${SERVER_NAME:-:81}
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeMe!}
    restart: unless-stopped
    volumes:
      - php_core_socket:/var/run/php
      - caddy_core_data:/data
      - caddy_core_config:/config
    ports:
      # HTTP
      - target: 81
        published: ${HTTP_PORT:-81}
        protocol: tcp
      # HTTPS
      - target: 446
        published: ${HTTPS_PORT:-446}
        protocol: tcp
      # HTTP/3
      - target: 447
        published: ${HTTP3_PORT:-447}
        protocol: udp

  database_core:
    image: postgres:${POSTGRES_VERSION}-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB_CORE}
      # # You should definitely change the password in production
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_CORE}
      - POSTGRES_USER=${POSTGRES_USER_CORE}
    volumes:
      - db_core_data:/var/lib/postgresql/data:rw
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - '5434:5432'
# Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###



  vue-ui:
    build:
      context: ./Swapit-Vue
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    container_name: vue-ui
    volumes:
      - ./Swapit-Vue:/usr/src/app/Swapit-Vue
      - /usr/src/app/Swapit-Vue/node_modules

volumes:
###> API_CORE ###
  php_core_socket:
  caddy_core_data:
  caddy_core_config:
###> doctrine/doctrine-bundle ###
  db_core_data:

###> API_GAME ###
  php_socket:
  caddy_data:
  caddy_config:
###> doctrine/doctrine-bundle ###
  db_data:

###< doctrine/doctrine-bundle ###
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###
